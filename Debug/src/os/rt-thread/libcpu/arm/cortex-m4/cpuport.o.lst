   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"cpuport.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	rt_interrupt_from_thread,4,4
  19              		.comm	rt_interrupt_to_thread,4,4
  20              		.comm	rt_thread_switch_interrupt_flag,4,4
  21              		.align	2
  22              		.global	rt_hw_stack_init
  23              		.thumb
  24              		.thumb_func
  26              	rt_hw_stack_init:
  27              	.LFB5:
  28              		.file 1 "../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c"
   1:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** /*
   2:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * File      : cpuport.c
   3:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * This file is part of RT-Thread RTOS
   4:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * COPYRIGHT (C) 2006 - 2011, RT-Thread Development Team
   5:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  *
   6:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * The license and distribution terms for this file may be
   7:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * found in the file LICENSE in this distribution or at
   8:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * http://www.rt-thread.org/license/LICENSE
   9:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  *
  10:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * Change Logs:
  11:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * Date           Author       Notes
  12:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * 2011-10-21     Bernard      the first version.
  13:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * 2011-10-27     aozima       update for cortex-M4 FPU.
  14:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * 2011-12-31     aozima       fixed stack align issues.
  15:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****  * 2012-01-01     aozima       support context switch load/store FPU register.
  16:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** */
  17:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #include <rtthread.h>
  18:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  19:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #define USE_FPU   /* ARMCC */ (  (defined ( __CC_ARM ) && defined ( __TARGET_FPU_VFP )) \
  20:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****                   /* IAR */   || (defined ( __ICCARM__ ) && defined ( __ARMVFP__ )) \
  21:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****                   /* GNU */   || (defined ( __GNUC__ ) && defined ( __VFP_FP__ ) && !defined(__SOFT
  22:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  23:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** /* exception and interrupt handler table */
  24:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** rt_uint32_t rt_interrupt_from_thread, rt_interrupt_to_thread;
  25:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** rt_uint32_t rt_thread_switch_interrupt_flag;
  26:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  27:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** struct exception_stack_frame
  28:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** {
  29:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r0;
  30:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r1;
  31:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r2;
  32:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r3;
  33:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r12;
  34:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t lr;
  35:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t pc;
  36:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t psr;
  37:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  38:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #if USE_FPU
  39:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     /* FPU register */
  40:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S0;
  41:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S1;
  42:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S2;
  43:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S3;
  44:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S4;
  45:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S5;
  46:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S6;
  47:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S7;
  48:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S8;
  49:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S9;
  50:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S10;
  51:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S11;
  52:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S12;
  53:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S13;
  54:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S14;
  55:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t S15;
  56:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t FPSCR;
  57:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t NO_NAME;
  58:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #endif
  59:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** };
  60:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  61:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** struct stack_frame
  62:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** {
  63:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     /* r4 ~ r11 register */
  64:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r4;
  65:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r5;
  66:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r6;
  67:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r7;
  68:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r8;
  69:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r9;
  70:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r10;
  71:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t r11;
  72:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  73:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #if USE_FPU
  74:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     /* FPU register s16 ~ s31 */
  75:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s16;
  76:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s17;
  77:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s18;
  78:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s19;
  79:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s20;
  80:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s21;
  81:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s22;
  82:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s23;
  83:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s24;
  84:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s25;
  85:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s26;
  86:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s27;
  87:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s28;
  88:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s29;
  89:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s30;
  90:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint32_t s31;
  91:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #endif
  92:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  93:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     struct exception_stack_frame exception_stack_frame;
  94:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** };
  95:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
  96:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** rt_uint8_t *rt_hw_stack_init(void *tentry, void *parameter,
  97:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****                              rt_uint8_t *stack_addr, void *texit)
  98:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** {
  29              		.loc 1 98 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 32
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 40
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 F860     		str	r0, [r7, #12]
  45 0008 B960     		str	r1, [r7, #8]
  46 000a 7A60     		str	r2, [r7, #4]
  47 000c 3B60     		str	r3, [r7, #0]
  99:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     struct stack_frame * stack_frame;
 100:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_uint8_t * stk;
 101:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     unsigned long i;
 102:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 103:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stk = stack_addr + sizeof(rt_uint32_t);
  48              		.loc 1 103 0
  49 000e 7B68     		ldr	r3, [r7, #4]
  50 0010 03F10403 		add	r3, r3, #4
  51 0014 BB61     		str	r3, [r7, #24]
 104:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 105:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stk -= sizeof(struct stack_frame);
  52              		.loc 1 105 0
  53 0016 BB69     		ldr	r3, [r7, #24]
  54 0018 A3F14003 		sub	r3, r3, #64
  55 001c BB61     		str	r3, [r7, #24]
 106:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame = (struct stack_frame *)stk;
  56              		.loc 1 106 0
  57 001e BB69     		ldr	r3, [r7, #24]
  58 0020 7B61     		str	r3, [r7, #20]
 107:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 108:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     /* init all register */
 109:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     for(i=0; i<sizeof(struct stack_frame)/sizeof(rt_uint32_t); i++)
  59              		.loc 1 109 0
  60 0022 4FF00003 		mov	r3, #0
  61 0026 FB61     		str	r3, [r7, #28]
  62 0028 0AE0     		b	.L2
  63              	.L3:
 110:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     {
 111:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****         ((rt_uint32_t*)stack_frame)[i] = 0xdeadbeef;
  64              		.loc 1 111 0 discriminator 2
  65 002a FB69     		ldr	r3, [r7, #28]
  66 002c 4FEA8303 		lsl	r3, r3, #2
  67 0030 7A69     		ldr	r2, [r7, #20]
  68 0032 D318     		adds	r3, r2, r3
  69 0034 164A     		ldr	r2, .L5
  70 0036 1A60     		str	r2, [r3, #0]
 109:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     for(i=0; i<sizeof(struct stack_frame)/sizeof(rt_uint32_t); i++)
  71              		.loc 1 109 0 discriminator 2
  72 0038 FB69     		ldr	r3, [r7, #28]
  73 003a 03F10103 		add	r3, r3, #1
  74 003e FB61     		str	r3, [r7, #28]
  75              	.L2:
 109:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     for(i=0; i<sizeof(struct stack_frame)/sizeof(rt_uint32_t); i++)
  76              		.loc 1 109 0 is_stmt 0 discriminator 1
  77 0040 FB69     		ldr	r3, [r7, #28]
  78 0042 0F2B     		cmp	r3, #15
  79 0044 F1D9     		bls	.L3
 112:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     }
 113:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 114:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.r0 = (unsigned long)parameter; /* r0 : argument */
  80              		.loc 1 114 0 is_stmt 1
  81 0046 BA68     		ldr	r2, [r7, #8]
  82 0048 7B69     		ldr	r3, [r7, #20]
  83 004a 1A62     		str	r2, [r3, #32]
 115:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.r1 = 0;                        /* r1 */
  84              		.loc 1 115 0
  85 004c 7B69     		ldr	r3, [r7, #20]
  86 004e 4FF00002 		mov	r2, #0
  87 0052 5A62     		str	r2, [r3, #36]
 116:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.r2 = 0;                        /* r2 */
  88              		.loc 1 116 0
  89 0054 7B69     		ldr	r3, [r7, #20]
  90 0056 4FF00002 		mov	r2, #0
  91 005a 9A62     		str	r2, [r3, #40]
 117:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.r3 = 0;                        /* r3 */
  92              		.loc 1 117 0
  93 005c 7B69     		ldr	r3, [r7, #20]
  94 005e 4FF00002 		mov	r2, #0
  95 0062 DA62     		str	r2, [r3, #44]
 118:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.r12 = 0;                       /* r12 */
  96              		.loc 1 118 0
  97 0064 7B69     		ldr	r3, [r7, #20]
  98 0066 4FF00002 		mov	r2, #0
  99 006a 1A63     		str	r2, [r3, #48]
 119:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.lr = (unsigned long)texit;     /* lr */
 100              		.loc 1 119 0
 101 006c 3A68     		ldr	r2, [r7, #0]
 102 006e 7B69     		ldr	r3, [r7, #20]
 103 0070 5A63     		str	r2, [r3, #52]
 120:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.pc = (unsigned long)tentry;    /* entry point, pc */
 104              		.loc 1 120 0
 105 0072 FA68     		ldr	r2, [r7, #12]
 106 0074 7B69     		ldr	r3, [r7, #20]
 107 0076 9A63     		str	r2, [r3, #56]
 121:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     stack_frame->exception_stack_frame.psr = 0x01000000L;             /* PSR */
 108              		.loc 1 121 0
 109 0078 7B69     		ldr	r3, [r7, #20]
 110 007a 4FF08072 		mov	r2, #16777216
 111 007e DA63     		str	r2, [r3, #60]
 122:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 123:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     /* return task's current stack address */
 124:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     return stk;
 112              		.loc 1 124 0
 113 0080 BB69     		ldr	r3, [r7, #24]
 125:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** }
 114              		.loc 1 125 0
 115 0082 1846     		mov	r0, r3
 116 0084 07F12407 		add	r7, r7, #36
 117 0088 BD46     		mov	sp, r7
 118 008a 80BC     		pop	{r7}
 119 008c 7047     		bx	lr
 120              	.L6:
 121 008e 00BF     		.align	2
 122              	.L5:
 123 0090 EFBEADDE 		.word	-559038737
 124              		.cfi_endproc
 125              	.LFE5:
 127              		.section	.rodata
 128              		.align	2
 129              	.LC0:
 130 0000 7073723A 		.ascii	"psr: 0x%08x\012\000"
 130      20307825 
 130      3038780A 
 130      00
 131 000d 000000   		.align	2
 132              	.LC1:
 133 0010 2070633A 		.ascii	" pc: 0x%08x\012\000"
 133      20307825 
 133      3038780A 
 133      00
 134 001d 000000   		.align	2
 135              	.LC2:
 136 0020 206C723A 		.ascii	" lr: 0x%08x\012\000"
 136      20307825 
 136      3038780A 
 136      00
 137 002d 000000   		.align	2
 138              	.LC3:
 139 0030 7231323A 		.ascii	"r12: 0x%08x\012\000"
 139      20307825 
 139      3038780A 
 139      00
 140 003d 000000   		.align	2
 141              	.LC4:
 142 0040 7230333A 		.ascii	"r03: 0x%08x\012\000"
 142      20307825 
 142      3038780A 
 142      00
 143 004d 000000   		.align	2
 144              	.LC5:
 145 0050 7230323A 		.ascii	"r02: 0x%08x\012\000"
 145      20307825 
 145      3038780A 
 145      00
 146 005d 000000   		.align	2
 147              	.LC6:
 148 0060 7230313A 		.ascii	"r01: 0x%08x\012\000"
 148      20307825 
 148      3038780A 
 148      00
 149 006d 000000   		.align	2
 150              	.LC7:
 151 0070 7230303A 		.ascii	"r00: 0x%08x\012\000"
 151      20307825 
 151      3038780A 
 151      00
 152 007d 000000   		.align	2
 153              	.LC8:
 154 0080 68617264 		.ascii	"hard fault on thread: %s\012\000"
 154      20666175 
 154      6C74206F 
 154      6E207468 
 154      72656164 
 155              		.text
 156              		.align	2
 157              		.global	rt_hw_hard_fault_exception
 158              		.thumb
 159              		.thumb_func
 161              	rt_hw_hard_fault_exception:
 162              	.LFB6:
 126:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 127:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** extern void rt_hw_interrupt_thread_switch(void);
 128:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** extern long list_thread(void);
 129:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** extern rt_thread_t rt_current_thread;
 130:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** void rt_hw_hard_fault_exception(struct exception_stack_frame * exception_stack)
 131:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** {
 163              		.loc 1 131 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 8
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0094 80B5     		push	{r7, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0096 82B0     		sub	sp, sp, #8
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 16
 175 0098 00AF     		add	r7, sp, #0
 176              	.LCFI5:
 177              		.cfi_def_cfa_register 7
 178 009a 7860     		str	r0, [r7, #4]
 132:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("psr: 0x%08x\n", exception_stack->psr);
 179              		.loc 1 132 0
 180 009c 7B68     		ldr	r3, [r7, #4]
 181 009e DB69     		ldr	r3, [r3, #28]
 182 00a0 1A48     		ldr	r0, .L9
 183 00a2 1946     		mov	r1, r3
 184 00a4 FFF7FEFF 		bl	rt_kprintf
 133:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf(" pc: 0x%08x\n", exception_stack->pc);
 185              		.loc 1 133 0
 186 00a8 7B68     		ldr	r3, [r7, #4]
 187 00aa 9B69     		ldr	r3, [r3, #24]
 188 00ac 1848     		ldr	r0, .L9+4
 189 00ae 1946     		mov	r1, r3
 190 00b0 FFF7FEFF 		bl	rt_kprintf
 134:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf(" lr: 0x%08x\n", exception_stack->lr);
 191              		.loc 1 134 0
 192 00b4 7B68     		ldr	r3, [r7, #4]
 193 00b6 5B69     		ldr	r3, [r3, #20]
 194 00b8 1648     		ldr	r0, .L9+8
 195 00ba 1946     		mov	r1, r3
 196 00bc FFF7FEFF 		bl	rt_kprintf
 135:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("r12: 0x%08x\n", exception_stack->r12);
 197              		.loc 1 135 0
 198 00c0 7B68     		ldr	r3, [r7, #4]
 199 00c2 1B69     		ldr	r3, [r3, #16]
 200 00c4 1448     		ldr	r0, .L9+12
 201 00c6 1946     		mov	r1, r3
 202 00c8 FFF7FEFF 		bl	rt_kprintf
 136:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("r03: 0x%08x\n", exception_stack->r3);
 203              		.loc 1 136 0
 204 00cc 7B68     		ldr	r3, [r7, #4]
 205 00ce DB68     		ldr	r3, [r3, #12]
 206 00d0 1248     		ldr	r0, .L9+16
 207 00d2 1946     		mov	r1, r3
 208 00d4 FFF7FEFF 		bl	rt_kprintf
 137:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("r02: 0x%08x\n", exception_stack->r2);
 209              		.loc 1 137 0
 210 00d8 7B68     		ldr	r3, [r7, #4]
 211 00da 9B68     		ldr	r3, [r3, #8]
 212 00dc 1048     		ldr	r0, .L9+20
 213 00de 1946     		mov	r1, r3
 214 00e0 FFF7FEFF 		bl	rt_kprintf
 138:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("r01: 0x%08x\n", exception_stack->r1);
 215              		.loc 1 138 0
 216 00e4 7B68     		ldr	r3, [r7, #4]
 217 00e6 5B68     		ldr	r3, [r3, #4]
 218 00e8 0E48     		ldr	r0, .L9+24
 219 00ea 1946     		mov	r1, r3
 220 00ec FFF7FEFF 		bl	rt_kprintf
 139:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("r00: 0x%08x\n", exception_stack->r0);
 221              		.loc 1 139 0
 222 00f0 7B68     		ldr	r3, [r7, #4]
 223 00f2 1B68     		ldr	r3, [r3, #0]
 224 00f4 0C48     		ldr	r0, .L9+28
 225 00f6 1946     		mov	r1, r3
 226 00f8 FFF7FEFF 		bl	rt_kprintf
 140:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 141:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("hard fault on thread: %s\n", rt_current_thread->name);
 227              		.loc 1 141 0
 228 00fc 0B4B     		ldr	r3, .L9+32
 229 00fe 1B68     		ldr	r3, [r3, #0]
 230 0100 0B48     		ldr	r0, .L9+36
 231 0102 1946     		mov	r1, r3
 232 0104 FFF7FEFF 		bl	rt_kprintf
 233              	.L8:
 142:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #ifdef RT_USING_FINSH
 143:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     list_thread();
 144:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** #endif
 145:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     while (1);
 234              		.loc 1 145 0 discriminator 1
 235 0108 FEE7     		b	.L8
 236              	.L10:
 237 010a 00BF     		.align	2
 238              	.L9:
 239 010c 00000000 		.word	.LC0
 240 0110 10000000 		.word	.LC1
 241 0114 20000000 		.word	.LC2
 242 0118 30000000 		.word	.LC3
 243 011c 40000000 		.word	.LC4
 244 0120 50000000 		.word	.LC5
 245 0124 60000000 		.word	.LC6
 246 0128 70000000 		.word	.LC7
 247 012c 00000000 		.word	rt_current_thread
 248 0130 80000000 		.word	.LC8
 249              		.cfi_endproc
 250              	.LFE6:
 252              		.section	.rodata
 253 009a 0000     		.align	2
 254              	.LC9:
 255 009c 73687574 		.ascii	"shutdown...\012\000"
 255      646F776E 
 255      2E2E2E0A 
 255      00
 256 00a9 000000   		.align	2
 257              	.LC10:
 258 00ac 28257329 		.ascii	"(%s) assert failed at %s:%d \012\000"
 258      20617373 
 258      65727420 
 258      6661696C 
 258      65642061 
 259 00ca 0000     		.align	2
 260              	.LC11:
 261 00cc 3000     		.ascii	"0\000"
 262              		.text
 263              		.align	2
 264              		.global	rt_hw_cpu_shutdown
 265              		.thumb
 266              		.thumb_func
 268              	rt_hw_cpu_shutdown:
 269              	.LFB7:
 146:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** }
 147:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 148:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** void rt_hw_cpu_shutdown()
 149:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** {
 270              		.loc 1 149 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0134 80B5     		push	{r7, lr}
 275              	.LCFI6:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0136 82B0     		sub	sp, sp, #8
 280              	.LCFI7:
 281              		.cfi_def_cfa_offset 16
 282 0138 00AF     		add	r7, sp, #0
 283              	.LCFI8:
 284              		.cfi_def_cfa_register 7
 150:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     rt_kprintf("shutdown...\n");
 285              		.loc 1 150 0
 286 013a 0A48     		ldr	r0, .L13
 287 013c FFF7FEFF 		bl	rt_kprintf
 288              	.LBB2:
 151:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** 
 152:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c ****     RT_ASSERT(0);
 289              		.loc 1 152 0
 290 0140 4FF00003 		mov	r3, #0
 291 0144 FB71     		strb	r3, [r7, #7]
 292 0146 0848     		ldr	r0, .L13+4
 293 0148 0849     		ldr	r1, .L13+8
 294 014a 094A     		ldr	r2, .L13+12
 295 014c 4FF09803 		mov	r3, #152
 296 0150 FFF7FEFF 		bl	rt_kprintf
 297              	.L12:
 298              		.loc 1 152 0 is_stmt 0 discriminator 2
 299 0154 FB79     		ldrb	r3, [r7, #7]
 300 0156 DBB2     		uxtb	r3, r3
 301 0158 002B     		cmp	r3, #0
 302 015a FBD0     		beq	.L12
 303              	.LBE2:
 153:../src/os/rt-thread/libcpu/arm/cortex-m4/cpuport.c **** }
 304              		.loc 1 153 0 is_stmt 1
 305 015c 07F10807 		add	r7, r7, #8
 306 0160 BD46     		mov	sp, r7
 307 0162 80BD     		pop	{r7, pc}
 308              	.L14:
 309              		.align	2
 310              	.L13:
 311 0164 9C000000 		.word	.LC9
 312 0168 AC000000 		.word	.LC10
 313 016c CC000000 		.word	.LC11
 314 0170 D0000000 		.word	__FUNCTION__.4830
 315              		.cfi_endproc
 316              	.LFE7:
 318              		.section	.rodata
 319 00ce 0000     		.align	2
 322              	__FUNCTION__.4830:
 323 00d0 72745F68 		.ascii	"rt_hw_cpu_shutdown\000"
 323      775F6370 
 323      755F7368 
 323      7574646F 
 323      776E00
 324 00e3 00       		.text
 325              	.Letext0:
 326              		.file 2 "D:\\workspace_gnu\\RTT_Demo0\\src\\os\\rt-thread\\include/rtdef.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cpuport.c
                            *COM*:00000004 rt_interrupt_from_thread
                            *COM*:00000004 rt_interrupt_to_thread
                            *COM*:00000004 rt_thread_switch_interrupt_flag
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:21     .text:00000000 $t
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:26     .text:00000000 rt_hw_stack_init
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:123    .text:00000090 $d
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:128    .rodata:00000000 $d
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:156    .text:00000094 $t
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:161    .text:00000094 rt_hw_hard_fault_exception
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:239    .text:0000010c $d
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:263    .text:00000134 $t
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:268    .text:00000134 rt_hw_cpu_shutdown
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:311    .text:00000164 $d
C:\Users\YANGZH~1\AppData\Local\Temp\ccK57OoT.s:322    .rodata:000000d0 __FUNCTION__.4830
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9fa2be94b3b27131c651c32db681ca6e
                           .group:00000000 wm4.rtconfig.h.3.5a4bd5c079694966fb1e9ee3a4751929
                           .group:00000000 wm4.rtdef.h.36.f520ed9310a9e6fa8719d7b7d81c046a
                           .group:00000000 wm4.rtdebug.h.12.1fd584faa18c8d5ccd4774b9c31afcd0
                           .group:00000000 wm4.rtservice.h.19.f6999772500f0a8f811ba3fba5581f34

UNDEFINED SYMBOLS
rt_kprintf
rt_current_thread
