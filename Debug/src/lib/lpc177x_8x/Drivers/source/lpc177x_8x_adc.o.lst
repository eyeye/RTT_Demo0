   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc177x_8x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	ADC_Init
  20              		.thumb
  21              		.thumb_func
  23              	ADC_Init:
  24              	.LFB55:
  25              		.file 1 "../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c"
   1:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /**********************************************************************
   2:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * $Id$      lpc177x_8x_adc.c            2011-06-02
   3:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *//**
   4:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @file     lpc177x_8x_adc.c
   5:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief    Contains all functions support for ADC firmware library on
   6:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *           LPC177x_8x
   7:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @version  1.0
   8:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @date     02. June. 2011
   9:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @author   NXP MCU SW Application Team
  10:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * 
  11:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * Copyright(C) 2011, NXP Semiconductor
  12:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * All rights reserved.
  13:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *
  14:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** ***********************************************************************
  15:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * Software that is described herein is for illustrative purposes only
  16:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * which provides customers with programming information regarding the
  17:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * products. This software is supplied "AS IS" without any warranties.
  18:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * NXP Semiconductors assumes no responsibility or liability for the
  19:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * use of the software, conveys no license or title under any patent,
  20:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * copyright, or mask work right to the product. NXP Semiconductors
  21:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * reserves the right to make changes in the software without
  22:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * notification. NXP Semiconductors also make no representation or
  23:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * warranty that such application will be suitable for the specified
  24:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * use without further testing or modification.
  25:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * Permission to use, copy, modify, and distribute this software and its
  26:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * documentation is hereby granted, under NXP Semiconductors'
  27:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * relevant copyright in the software, without fee, provided that it
  28:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * is used in conjunction with NXP Semiconductors microcontrollers.  This
  29:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * copyright, permission, and disclaimer notice must appear in all copies of
  30:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * this code.
  31:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
  32:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  33:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /* Peripheral group ----------------------------------------------------------- */
  34:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /** @addtogroup ADC
  35:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  * @{
  36:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  */
  37:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #ifdef __BUILD_WITH_EXAMPLE__
  38:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #include "lpc177x_8x_libcfg.h"
  39:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #else
  40:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #include "lpc177x_8x_libcfg_default.h"
  41:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #endif /* __BUILD_WITH_EXAMPLE__ */
  42:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #ifdef _ADC
  43:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  
  44:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /* Includes ------------------------------------------------------------------- */
  45:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #include "lpc_types.h"
  46:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #include "lpc177x_8x_adc.h"
  47:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** #include "lpc177x_8x_clkpwr.h"
  48:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  49:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /* Public Functions ----------------------------------------------------------- */
  50:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /** @addtogroup ADC_Public_Functions
  51:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  * @{
  52:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  */
  53:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  54:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
  55:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  * @brief       Initial for ADC
  56:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  *                  + Set bit PCADC
  57:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  *                  + Set clock for ADC
  58:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  *                  + Set Clock Frequency
  59:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  * @param[in]   ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
  60:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  * @param[in]   rate ADC conversion rate, should be <=200KHz
  61:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  * @return      None
  62:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****  **********************************************************************/
  63:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_Init(LPC_ADC_TypeDef *ADCx, uint32_t rate)
  64:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
  26              		.loc 1 64 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 86B0     		sub	sp, sp, #24
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 32
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  42 0008 3960     		str	r1, [r7, #0]
  65:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     uint32_t ADCPClk, temp, tmp;
  66:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  67:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     // Turn on power and clock
  68:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCADC, ENABLE);
  43              		.loc 1 68 0
  44 000a 4FF48050 		mov	r0, #4096
  45 000e 4FF00101 		mov	r1, #1
  46 0012 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
  69:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  70:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR = 0;
  47              		.loc 1 70 0
  48 0016 7B68     		ldr	r3, [r7, #4]
  49 0018 4FF00002 		mov	r2, #0
  50 001c 1A60     		str	r2, [r3, #0]
  71:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  72:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     //Enable PDN bit
  73:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     tmp = ADC_CR_PDN;
  51              		.loc 1 73 0
  52 001e 4FF40013 		mov	r3, #2097152
  53 0022 7B61     		str	r3, [r7, #20]
  74:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  75:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     // Set clock frequency
  76:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCPClk = CLKPWR_GetCLK(CLKPWR_CLKTYPE_PER);
  54              		.loc 1 76 0
  55 0024 4FF00100 		mov	r0, #1
  56 0028 FFF7FEFF 		bl	CLKPWR_GetCLK
  57 002c 3861     		str	r0, [r7, #16]
  77:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  78:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     /* The APB clock (PCLK_ADC0) is divided by (CLKDIV+1) to produce the clock for
  79:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****      * A/D converter, which should be less than or equal to 12.4MHz.
  80:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****      * A fully conversion requires 31 of these clocks.
  81:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****      * ADC clock = PCLK_ADC0 / (CLKDIV + 1);
  82:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****      * ADC rate = ADC clock / 31;
  83:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****      */
  84:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     temp = rate * 31;
  58              		.loc 1 84 0
  59 002e 3A68     		ldr	r2, [r7, #0]
  60 0030 1346     		mov	r3, r2
  61 0032 4FEA4313 		lsl	r3, r3, #5
  62 0036 9B1A     		subs	r3, r3, r2
  63 0038 FB60     		str	r3, [r7, #12]
  85:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     temp = (ADCPClk * 2 + temp)/(2 * temp) - 1; //get the round value by fomular: (2*A + B)/(2*A)
  64              		.loc 1 85 0
  65 003a 3B69     		ldr	r3, [r7, #16]
  66 003c 4FEA4302 		lsl	r2, r3, #1
  67 0040 FB68     		ldr	r3, [r7, #12]
  68 0042 D218     		adds	r2, r2, r3
  69 0044 FB68     		ldr	r3, [r7, #12]
  70 0046 4FEA4303 		lsl	r3, r3, #1
  71 004a B2FBF3F3 		udiv	r3, r2, r3
  72 004e 03F1FF33 		add	r3, r3, #-1
  73 0052 FB60     		str	r3, [r7, #12]
  86:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     tmp |=  ADC_CR_CLKDIV(temp);
  74              		.loc 1 86 0
  75 0054 FB68     		ldr	r3, [r7, #12]
  76 0056 4FEA0323 		lsl	r3, r3, #8
  77 005a 7A69     		ldr	r2, [r7, #20]
  78 005c 1343     		orrs	r3, r3, r2
  79 005e 7B61     		str	r3, [r7, #20]
  87:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  88:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR = tmp;
  80              		.loc 1 88 0
  81 0060 7B68     		ldr	r3, [r7, #4]
  82 0062 7A69     		ldr	r2, [r7, #20]
  83 0064 1A60     		str	r2, [r3, #0]
  89:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
  84              		.loc 1 89 0
  85 0066 07F11807 		add	r7, r7, #24
  86 006a BD46     		mov	sp, r7
  87 006c 80BD     		pop	{r7, pc}
  88              		.cfi_endproc
  89              	.LFE55:
  91 006e 00BF     		.align	2
  92              		.global	ADC_DeInit
  93              		.thumb
  94              		.thumb_func
  96              	ADC_DeInit:
  97              	.LFB56:
  90:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  91:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
  92:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
  93:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Close ADC
  94:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
  95:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       None
  96:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
  97:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_DeInit(LPC_ADC_TypeDef *ADCx)
  98:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
  98              		.loc 1 98 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 8
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0070 80B5     		push	{r7, lr}
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0072 82B0     		sub	sp, sp, #8
 108              	.LCFI4:
 109              		.cfi_def_cfa_offset 16
 110 0074 00AF     		add	r7, sp, #0
 111              	.LCFI5:
 112              		.cfi_def_cfa_register 7
 113 0076 7860     		str	r0, [r7, #4]
  99:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (ADCx->CR & ADC_CR_START_MASK) //need to stop START bits before DeInit
 114              		.loc 1 99 0
 115 0078 7B68     		ldr	r3, [r7, #4]
 116 007a 1B68     		ldr	r3, [r3, #0]
 117 007c 03F0E063 		and	r3, r3, #117440512
 118 0080 002B     		cmp	r3, #0
 119 0082 05D0     		beq	.L3
 100:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         ADCx->CR &= ~ADC_CR_START_MASK;
 120              		.loc 1 100 0
 121 0084 7B68     		ldr	r3, [r7, #4]
 122 0086 1B68     		ldr	r3, [r3, #0]
 123 0088 23F0E062 		bic	r2, r3, #117440512
 124 008c 7B68     		ldr	r3, [r7, #4]
 125 008e 1A60     		str	r2, [r3, #0]
 126              	.L3:
 101:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****      // Clear SEL bits
 102:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****      ADCx->CR &= ~0xFF;
 127              		.loc 1 102 0
 128 0090 7B68     		ldr	r3, [r7, #4]
 129 0092 1B68     		ldr	r3, [r3, #0]
 130 0094 23F0FF02 		bic	r2, r3, #255
 131 0098 7B68     		ldr	r3, [r7, #4]
 132 009a 1A60     		str	r2, [r3, #0]
 103:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 104:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     // Clear PDN bit
 105:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR &= ~ADC_CR_PDN;
 133              		.loc 1 105 0
 134 009c 7B68     		ldr	r3, [r7, #4]
 135 009e 1B68     		ldr	r3, [r3, #0]
 136 00a0 23F40012 		bic	r2, r3, #2097152
 137 00a4 7B68     		ldr	r3, [r7, #4]
 138 00a6 1A60     		str	r2, [r3, #0]
 106:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     // Turn on power and clock
 107:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCADC, DISABLE);
 139              		.loc 1 107 0
 140 00a8 4FF48050 		mov	r0, #4096
 141 00ac 4FF00001 		mov	r1, #0
 142 00b0 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 108:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 143              		.loc 1 108 0
 144 00b4 07F10807 		add	r7, r7, #8
 145 00b8 BD46     		mov	sp, r7
 146 00ba 80BD     		pop	{r7, pc}
 147              		.cfi_endproc
 148              	.LFE56:
 150              		.align	2
 151              		.global	ADC_GetData
 152              		.thumb
 153              		.thumb_func
 155              	ADC_GetData:
 156              	.LFB57:
 109:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 110:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 111:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 112:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Get Result conversion from A/D data register
 113:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    channel number which want to read back the result
 114:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       Result of conversion
 115:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *********************************************************************/
 116:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** uint32_t ADC_GetData(uint32_t channel)
 117:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 157              		.loc 1 117 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 16
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 00bc 80B4     		push	{r7}
 163              	.LCFI6:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 7, -4
 166 00be 85B0     		sub	sp, sp, #20
 167              	.LCFI7:
 168              		.cfi_def_cfa_offset 24
 169 00c0 00AF     		add	r7, sp, #0
 170              	.LCFI8:
 171              		.cfi_def_cfa_register 7
 172 00c2 7860     		str	r0, [r7, #4]
 118:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     uint32_t adc_value;
 119:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 120:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     adc_value = *(uint32_t *)((&LPC_ADC->DR[0]) + channel);
 173              		.loc 1 120 0
 174 00c4 7B68     		ldr	r3, [r7, #4]
 175 00c6 4FEA8302 		lsl	r2, r3, #2
 176 00ca 084B     		ldr	r3, .L6
 177 00cc D318     		adds	r3, r2, r3
 178 00ce 1B68     		ldr	r3, [r3, #0]
 179 00d0 FB60     		str	r3, [r7, #12]
 121:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     return ADC_GDR_RESULT(adc_value);
 180              		.loc 1 121 0
 181 00d2 FB68     		ldr	r3, [r7, #12]
 182 00d4 4FEA1313 		lsr	r3, r3, #4
 183 00d8 4FEA0353 		lsl	r3, r3, #20
 184 00dc 4FEA1353 		lsr	r3, r3, #20
 122:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 185              		.loc 1 122 0
 186 00e0 1846     		mov	r0, r3
 187 00e2 07F11407 		add	r7, r7, #20
 188 00e6 BD46     		mov	sp, r7
 189 00e8 80BC     		pop	{r7}
 190 00ea 7047     		bx	lr
 191              	.L7:
 192              		.align	2
 193              	.L6:
 194 00ec 10400340 		.word	1073954832
 195              		.cfi_endproc
 196              	.LFE57:
 198              		.align	2
 199              		.global	ADC_StartCmd
 200              		.thumb
 201              		.thumb_func
 203              	ADC_StartCmd:
 204              	.LFB58:
 123:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 124:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 125:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Set start mode for ADC
 126:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 127:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    start_mode Start mode choose one of modes in
 128:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               'ADC_START_OPT' enumeration type definition, should be:
 129:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_CONTINUOUS
 130:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_NOW
 131:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_ON_EINT0
 132:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_ON_CAP01
 133:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_ON_MAT01
 134:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_ON_MAT03
 135:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_ON_MAT10
 136:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_START_ON_MAT11
 137:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       None
 138:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *********************************************************************/
 139:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_StartCmd(LPC_ADC_TypeDef *ADCx, uint8_t start_mode)
 140:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 205              		.loc 1 140 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210 00f0 80B4     		push	{r7}
 211              	.LCFI9:
 212              		.cfi_def_cfa_offset 4
 213              		.cfi_offset 7, -4
 214 00f2 83B0     		sub	sp, sp, #12
 215              	.LCFI10:
 216              		.cfi_def_cfa_offset 16
 217 00f4 00AF     		add	r7, sp, #0
 218              	.LCFI11:
 219              		.cfi_def_cfa_register 7
 220 00f6 7860     		str	r0, [r7, #4]
 221 00f8 0B46     		mov	r3, r1
 222 00fa FB70     		strb	r3, [r7, #3]
 141:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR &= ~ADC_CR_START_MASK;
 223              		.loc 1 141 0
 224 00fc 7B68     		ldr	r3, [r7, #4]
 225 00fe 1B68     		ldr	r3, [r3, #0]
 226 0100 23F0E062 		bic	r2, r3, #117440512
 227 0104 7B68     		ldr	r3, [r7, #4]
 228 0106 1A60     		str	r2, [r3, #0]
 142:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR |=ADC_CR_START_MODE_SEL((uint32_t)start_mode);
 229              		.loc 1 142 0
 230 0108 7B68     		ldr	r3, [r7, #4]
 231 010a 1A68     		ldr	r2, [r3, #0]
 232 010c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 233 010e 4FEA0363 		lsl	r3, r3, #24
 234 0112 1A43     		orrs	r2, r2, r3
 235 0114 7B68     		ldr	r3, [r7, #4]
 236 0116 1A60     		str	r2, [r3, #0]
 143:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 237              		.loc 1 143 0
 238 0118 07F10C07 		add	r7, r7, #12
 239 011c BD46     		mov	sp, r7
 240 011e 80BC     		pop	{r7}
 241 0120 7047     		bx	lr
 242              		.cfi_endproc
 243              	.LFE58:
 245 0122 00BF     		.align	2
 246              		.global	ADC_BurstCmd
 247              		.thumb
 248              		.thumb_func
 250              	ADC_BurstCmd:
 251              	.LFB59:
 144:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 145:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 146:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 147:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        ADC Burst mode setting
 148:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 149:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    NewState
 150:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               -   1: Set Burst mode
 151:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               -   0: reset Burst mode
 152:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       None
 153:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 154:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_BurstCmd(LPC_ADC_TypeDef *ADCx, FunctionalState NewState)
 155:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 252              		.loc 1 155 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 8
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0124 80B4     		push	{r7}
 258              	.LCFI12:
 259              		.cfi_def_cfa_offset 4
 260              		.cfi_offset 7, -4
 261 0126 83B0     		sub	sp, sp, #12
 262              	.LCFI13:
 263              		.cfi_def_cfa_offset 16
 264 0128 00AF     		add	r7, sp, #0
 265              	.LCFI14:
 266              		.cfi_def_cfa_register 7
 267 012a 7860     		str	r0, [r7, #4]
 268 012c 0B46     		mov	r3, r1
 269 012e FB70     		strb	r3, [r7, #3]
 156:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR &= ~ADC_CR_BURST;
 270              		.loc 1 156 0
 271 0130 7B68     		ldr	r3, [r7, #4]
 272 0132 1B68     		ldr	r3, [r3, #0]
 273 0134 23F48032 		bic	r2, r3, #65536
 274 0138 7B68     		ldr	r3, [r7, #4]
 275 013a 1A60     		str	r2, [r3, #0]
 157:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (NewState){
 276              		.loc 1 157 0
 277 013c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 278 013e 002B     		cmp	r3, #0
 279 0140 05D0     		beq	.L9
 158:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         ADCx->CR |= ADC_CR_BURST;
 280              		.loc 1 158 0
 281 0142 7B68     		ldr	r3, [r7, #4]
 282 0144 1B68     		ldr	r3, [r3, #0]
 283 0146 43F48032 		orr	r2, r3, #65536
 284 014a 7B68     		ldr	r3, [r7, #4]
 285 014c 1A60     		str	r2, [r3, #0]
 286              	.L9:
 159:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 160:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 287              		.loc 1 160 0
 288 014e 07F10C07 		add	r7, r7, #12
 289 0152 BD46     		mov	sp, r7
 290 0154 80BC     		pop	{r7}
 291 0156 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE59:
 295              		.align	2
 296              		.global	ADC_PowerdownCmd
 297              		.thumb
 298              		.thumb_func
 300              	ADC_PowerdownCmd:
 301              	.LFB60:
 161:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 162:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 163:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Set AD conversion in power mode
 164:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 165:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    NewState
 166:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               -   1: AD converter is optional
 167:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               -   0: AD Converter is in power down mode
 168:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       None
 169:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 170:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_PowerdownCmd(LPC_ADC_TypeDef *ADCx, FunctionalState NewState)
 171:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 302              		.loc 1 171 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 8
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 307 0158 80B4     		push	{r7}
 308              	.LCFI15:
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 015a 83B0     		sub	sp, sp, #12
 312              	.LCFI16:
 313              		.cfi_def_cfa_offset 16
 314 015c 00AF     		add	r7, sp, #0
 315              	.LCFI17:
 316              		.cfi_def_cfa_register 7
 317 015e 7860     		str	r0, [r7, #4]
 318 0160 0B46     		mov	r3, r1
 319 0162 FB70     		strb	r3, [r7, #3]
 172:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR &= ~ADC_CR_PDN;
 320              		.loc 1 172 0
 321 0164 7B68     		ldr	r3, [r7, #4]
 322 0166 1B68     		ldr	r3, [r3, #0]
 323 0168 23F40012 		bic	r2, r3, #2097152
 324 016c 7B68     		ldr	r3, [r7, #4]
 325 016e 1A60     		str	r2, [r3, #0]
 173:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (NewState){
 326              		.loc 1 173 0
 327 0170 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 328 0172 002B     		cmp	r3, #0
 329 0174 05D0     		beq	.L11
 174:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         ADCx->CR |= ADC_CR_PDN;
 330              		.loc 1 174 0
 331 0176 7B68     		ldr	r3, [r7, #4]
 332 0178 1B68     		ldr	r3, [r3, #0]
 333 017a 43F40012 		orr	r2, r3, #2097152
 334 017e 7B68     		ldr	r3, [r7, #4]
 335 0180 1A60     		str	r2, [r3, #0]
 336              	.L11:
 175:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 176:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 337              		.loc 1 176 0
 338 0182 07F10C07 		add	r7, r7, #12
 339 0186 BD46     		mov	sp, r7
 340 0188 80BC     		pop	{r7}
 341 018a 7047     		bx	lr
 342              		.cfi_endproc
 343              	.LFE60:
 345              		.align	2
 346              		.global	ADC_EdgeStartConfig
 347              		.thumb
 348              		.thumb_func
 350              	ADC_EdgeStartConfig:
 351              	.LFB61:
 177:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 178:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 179:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Set Edge start configuration
 180:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 181:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    EdgeOption is ADC_START_ON_RISING and ADC_START_ON_FALLING
 182:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                   0:ADC_START_ON_RISING
 183:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                   1:ADC_START_ON_FALLING
 184:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       None
 185:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 186:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_EdgeStartConfig(LPC_ADC_TypeDef *ADCx, uint8_t EdgeOption)
 187:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 352              		.loc 1 187 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 018c 80B4     		push	{r7}
 358              	.LCFI18:
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 018e 83B0     		sub	sp, sp, #12
 362              	.LCFI19:
 363              		.cfi_def_cfa_offset 16
 364 0190 00AF     		add	r7, sp, #0
 365              	.LCFI20:
 366              		.cfi_def_cfa_register 7
 367 0192 7860     		str	r0, [r7, #4]
 368 0194 0B46     		mov	r3, r1
 369 0196 FB70     		strb	r3, [r7, #3]
 188:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->CR &= ~ADC_CR_EDGE;
 370              		.loc 1 188 0
 371 0198 7B68     		ldr	r3, [r7, #4]
 372 019a 1B68     		ldr	r3, [r3, #0]
 373 019c 23F00062 		bic	r2, r3, #134217728
 374 01a0 7B68     		ldr	r3, [r7, #4]
 375 01a2 1A60     		str	r2, [r3, #0]
 189:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (EdgeOption){
 376              		.loc 1 189 0
 377 01a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 378 01a6 002B     		cmp	r3, #0
 379 01a8 05D0     		beq	.L13
 190:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         ADCx->CR |= ADC_CR_EDGE;
 380              		.loc 1 190 0
 381 01aa 7B68     		ldr	r3, [r7, #4]
 382 01ac 1B68     		ldr	r3, [r3, #0]
 383 01ae 43F00062 		orr	r2, r3, #134217728
 384 01b2 7B68     		ldr	r3, [r7, #4]
 385 01b4 1A60     		str	r2, [r3, #0]
 386              	.L13:
 191:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 192:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 387              		.loc 1 192 0
 388 01b6 07F10C07 		add	r7, r7, #12
 389 01ba BD46     		mov	sp, r7
 390 01bc 80BC     		pop	{r7}
 391 01be 7047     		bx	lr
 392              		.cfi_endproc
 393              	.LFE61:
 395              		.align	2
 396              		.global	ADC_IntConfig
 397              		.thumb
 398              		.thumb_func
 400              	ADC_IntConfig:
 401              	.LFB62:
 193:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 194:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 195:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        ADC interrupt configuration
 196:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 197:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    IntType: type of interrupt, should be:
 198:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_ADINTEN0: Interrupt channel 0
 199:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_ADINTEN1: Interrupt channel 1
 200:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               ...
 201:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_ADINTEN7: Interrupt channel 7
 202:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *               - ADC_ADGINTEN: Individual channel/global flag done generate an interrupt
 203:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    NewState:
 204:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                   - SET : enable ADC interrupt
 205:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                   - RESET: disable ADC interrupt
 206:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       None
 207:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 208:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_IntConfig (LPC_ADC_TypeDef *ADCx, ADC_TYPE_INT_OPT IntType, FunctionalState NewState)
 209:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 402              		.loc 1 209 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 8
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407 01c0 80B4     		push	{r7}
 408              	.LCFI21:
 409              		.cfi_def_cfa_offset 4
 410              		.cfi_offset 7, -4
 411 01c2 83B0     		sub	sp, sp, #12
 412              	.LCFI22:
 413              		.cfi_def_cfa_offset 16
 414 01c4 00AF     		add	r7, sp, #0
 415              	.LCFI23:
 416              		.cfi_def_cfa_register 7
 417 01c6 7860     		str	r0, [r7, #4]
 418 01c8 1346     		mov	r3, r2
 419 01ca 0A46     		mov	r2, r1
 420 01cc FA70     		strb	r2, [r7, #3]
 421 01ce BB70     		strb	r3, [r7, #2]
 210:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     ADCx->INTEN &= ~ADC_INTEN_CH(IntType);
 422              		.loc 1 210 0
 423 01d0 7B68     		ldr	r3, [r7, #4]
 424 01d2 DA68     		ldr	r2, [r3, #12]
 425 01d4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 426 01d6 4FF00101 		mov	r1, #1
 427 01da 01FA03F3 		lsl	r3, r1, r3
 428 01de 6FEA0303 		mvn	r3, r3
 429 01e2 1A40     		ands	r2, r2, r3
 430 01e4 7B68     		ldr	r3, [r7, #4]
 431 01e6 DA60     		str	r2, [r3, #12]
 211:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (NewState){
 432              		.loc 1 211 0
 433 01e8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 434 01ea 002B     		cmp	r3, #0
 435 01ec 09D0     		beq	.L15
 212:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         ADCx->INTEN |= ADC_INTEN_CH(IntType);
 436              		.loc 1 212 0
 437 01ee 7B68     		ldr	r3, [r7, #4]
 438 01f0 DA68     		ldr	r2, [r3, #12]
 439 01f2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 440 01f4 4FF00101 		mov	r1, #1
 441 01f8 01FA03F3 		lsl	r3, r1, r3
 442 01fc 1A43     		orrs	r2, r2, r3
 443 01fe 7B68     		ldr	r3, [r7, #4]
 444 0200 DA60     		str	r2, [r3, #12]
 445              	.L15:
 213:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 214:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 446              		.loc 1 214 0
 447 0202 07F10C07 		add	r7, r7, #12
 448 0206 BD46     		mov	sp, r7
 449 0208 80BC     		pop	{r7}
 450 020a 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE62:
 454              		.align	2
 455              		.global	ADC_ChannelCmd
 456              		.thumb
 457              		.thumb_func
 459              	ADC_ChannelCmd:
 460              	.LFB63:
 215:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 216:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 217:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Enable/Disable ADC channel number
 218:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 219:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    Channel channel number
 220:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    NewState Enable or Disable
 221:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *
 222:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       None
 223:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 224:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** void ADC_ChannelCmd (LPC_ADC_TypeDef *ADCx, uint8_t Channel, FunctionalState NewState)
 225:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 461              		.loc 1 225 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 020c 80B4     		push	{r7}
 467              	.LCFI24:
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 7, -4
 470 020e 83B0     		sub	sp, sp, #12
 471              	.LCFI25:
 472              		.cfi_def_cfa_offset 16
 473 0210 00AF     		add	r7, sp, #0
 474              	.LCFI26:
 475              		.cfi_def_cfa_register 7
 476 0212 7860     		str	r0, [r7, #4]
 477 0214 1346     		mov	r3, r2
 478 0216 0A46     		mov	r2, r1
 479 0218 FA70     		strb	r2, [r7, #3]
 480 021a BB70     		strb	r3, [r7, #2]
 226:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (NewState == ENABLE) {
 481              		.loc 1 226 0
 482 021c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 483 021e 012B     		cmp	r3, #1
 484 0220 0AD1     		bne	.L18
 227:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         ADCx->CR |= ADC_CR_CH_SEL(Channel);
 485              		.loc 1 227 0
 486 0222 7B68     		ldr	r3, [r7, #4]
 487 0224 1A68     		ldr	r2, [r3, #0]
 488 0226 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 489 0228 4FF00101 		mov	r1, #1
 490 022c 01FA03F3 		lsl	r3, r1, r3
 491 0230 1A43     		orrs	r2, r2, r3
 492 0232 7B68     		ldr	r3, [r7, #4]
 493 0234 1A60     		str	r2, [r3, #0]
 494 0236 17E0     		b	.L17
 495              	.L18:
 228:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     } else {        
 229:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         if (ADCx->CR & ADC_CR_START_MASK) //need to stop START bits before disable channel
 496              		.loc 1 229 0
 497 0238 7B68     		ldr	r3, [r7, #4]
 498 023a 1B68     		ldr	r3, [r3, #0]
 499 023c 03F0E063 		and	r3, r3, #117440512
 500 0240 002B     		cmp	r3, #0
 501 0242 05D0     		beq	.L20
 230:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****            ADCx->CR &= ~ADC_CR_START_MASK;
 502              		.loc 1 230 0
 503 0244 7B68     		ldr	r3, [r7, #4]
 504 0246 1B68     		ldr	r3, [r3, #0]
 505 0248 23F0E062 		bic	r2, r3, #117440512
 506 024c 7B68     		ldr	r3, [r7, #4]
 507 024e 1A60     		str	r2, [r3, #0]
 508              	.L20:
 231:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         ADCx->CR &= ~ADC_CR_CH_SEL(Channel);
 509              		.loc 1 231 0
 510 0250 7B68     		ldr	r3, [r7, #4]
 511 0252 1A68     		ldr	r2, [r3, #0]
 512 0254 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 513 0256 4FF00101 		mov	r1, #1
 514 025a 01FA03F3 		lsl	r3, r1, r3
 515 025e 6FEA0303 		mvn	r3, r3
 516 0262 1A40     		ands	r2, r2, r3
 517 0264 7B68     		ldr	r3, [r7, #4]
 518 0266 1A60     		str	r2, [r3, #0]
 519              	.L17:
 232:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 233:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 520              		.loc 1 233 0
 521 0268 07F10C07 		add	r7, r7, #12
 522 026c BD46     		mov	sp, r7
 523 026e 80BC     		pop	{r7}
 524 0270 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE63:
 528 0272 00BF     		.align	2
 529              		.global	ADC_ChannelGetData
 530              		.thumb
 531              		.thumb_func
 533              	ADC_ChannelGetData:
 534              	.LFB64:
 234:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 235:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 236:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Get ADC result
 237:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 238:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    channel: channel number, should be 0...7
 239:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       Data conversion
 240:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 241:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** uint16_t ADC_ChannelGetData(LPC_ADC_TypeDef *ADCx, uint8_t channel)
 242:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 535              		.loc 1 242 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 16
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0274 80B4     		push	{r7}
 541              	.LCFI27:
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0276 85B0     		sub	sp, sp, #20
 545              	.LCFI28:
 546              		.cfi_def_cfa_offset 24
 547 0278 00AF     		add	r7, sp, #0
 548              	.LCFI29:
 549              		.cfi_def_cfa_register 7
 550 027a 7860     		str	r0, [r7, #4]
 551 027c 0B46     		mov	r3, r1
 552 027e FB70     		strb	r3, [r7, #3]
 243:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     uint32_t adc_value;
 244:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     adc_value = *(uint32_t *) ((&ADCx->DR[0]) + channel);
 553              		.loc 1 244 0
 554 0280 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 555 0282 7B68     		ldr	r3, [r7, #4]
 556 0284 02F10402 		add	r2, r2, #4
 557 0288 53F82230 		ldr	r3, [r3, r2, lsl #2]
 558 028c FB60     		str	r3, [r7, #12]
 245:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     return ADC_DR_RESULT(adc_value);
 559              		.loc 1 245 0
 560 028e FB68     		ldr	r3, [r7, #12]
 561 0290 4FEA1313 		lsr	r3, r3, #4
 562 0294 9BB2     		uxth	r3, r3
 563 0296 4FEA0353 		lsl	r3, r3, #20
 564 029a 4FEA1353 		lsr	r3, r3, #20
 565 029e 9BB2     		uxth	r3, r3
 246:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 566              		.loc 1 246 0
 567 02a0 1846     		mov	r0, r3
 568 02a2 07F11407 		add	r7, r7, #20
 569 02a6 BD46     		mov	sp, r7
 570 02a8 80BC     		pop	{r7}
 571 02aa 7047     		bx	lr
 572              		.cfi_endproc
 573              	.LFE64:
 575              		.align	2
 576              		.global	ADC_ChannelGetStatus
 577              		.thumb
 578              		.thumb_func
 580              	ADC_ChannelGetStatus:
 581              	.LFB65:
 247:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 248:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 249:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Get ADC Chanel status from ADC data register
 250:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 251:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    channel: channel number, should be 0..7
 252:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    StatusType
 253:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                       0:Burst status
 254:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                       1:Done  status
 255:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       SET / RESET
 256:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 257:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** FlagStatus ADC_ChannelGetStatus(LPC_ADC_TypeDef *ADCx, uint8_t channel, uint32_t StatusType)
 258:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 582              		.loc 1 258 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 24
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587 02ac 80B4     		push	{r7}
 588              	.LCFI30:
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 7, -4
 591 02ae 87B0     		sub	sp, sp, #28
 592              	.LCFI31:
 593              		.cfi_def_cfa_offset 32
 594 02b0 00AF     		add	r7, sp, #0
 595              	.LCFI32:
 596              		.cfi_def_cfa_register 7
 597 02b2 F860     		str	r0, [r7, #12]
 598 02b4 0B46     		mov	r3, r1
 599 02b6 7A60     		str	r2, [r7, #4]
 600 02b8 FB72     		strb	r3, [r7, #11]
 259:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     uint32_t temp;
 260:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     temp =  *(uint32_t *) ((&ADCx->DR[0]) + channel);
 601              		.loc 1 260 0
 602 02ba FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 603 02bc FB68     		ldr	r3, [r7, #12]
 604 02be 02F10402 		add	r2, r2, #4
 605 02c2 53F82230 		ldr	r3, [r3, r2, lsl #2]
 606 02c6 7B61     		str	r3, [r7, #20]
 261:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (StatusType)
 607              		.loc 1 261 0
 608 02c8 7B68     		ldr	r3, [r7, #4]
 609 02ca 002B     		cmp	r3, #0
 610 02cc 04D0     		beq	.L24
 262:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     {
 263:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         temp &= ADC_DR_DONE_FLAG;
 611              		.loc 1 263 0
 612 02ce 7B69     		ldr	r3, [r7, #20]
 613 02d0 03F00043 		and	r3, r3, #-2147483648
 614 02d4 7B61     		str	r3, [r7, #20]
 615 02d6 03E0     		b	.L25
 616              	.L24:
 264:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 265:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     else
 266:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     {
 267:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         temp &= ADC_DR_OVERRUN_FLAG;
 617              		.loc 1 267 0
 618 02d8 7B69     		ldr	r3, [r7, #20]
 619 02da 03F08043 		and	r3, r3, #1073741824
 620 02de 7B61     		str	r3, [r7, #20]
 621              	.L25:
 268:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 269:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 270:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (temp)
 622              		.loc 1 270 0
 623 02e0 7B69     		ldr	r3, [r7, #20]
 624 02e2 002B     		cmp	r3, #0
 625 02e4 02D0     		beq	.L26
 271:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     {
 272:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         return SET;
 626              		.loc 1 272 0
 627 02e6 4FF00103 		mov	r3, #1
 628 02ea 01E0     		b	.L27
 629              	.L26:
 273:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 274:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     else
 275:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     {
 276:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         return RESET;
 630              		.loc 1 276 0
 631 02ec 4FF00003 		mov	r3, #0
 632              	.L27:
 277:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 278:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 279:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 633              		.loc 1 279 0
 634 02f0 1846     		mov	r0, r3
 635 02f2 07F11C07 		add	r7, r7, #28
 636 02f6 BD46     		mov	sp, r7
 637 02f8 80BC     		pop	{r7}
 638 02fa 7047     		bx	lr
 639              		.cfi_endproc
 640              	.LFE65:
 642              		.align	2
 643              		.global	ADC_GlobalGetData
 644              		.thumb
 645              		.thumb_func
 647              	ADC_GlobalGetData:
 648              	.LFB66:
 280:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 281:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 282:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Get ADC Data from AD Global register
 283:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 284:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       Result of conversion
 285:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 286:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** uint32_t ADC_GlobalGetData(LPC_ADC_TypeDef *ADCx)
 287:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 649              		.loc 1 287 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 654 02fc 80B4     		push	{r7}
 655              	.LCFI33:
 656              		.cfi_def_cfa_offset 4
 657              		.cfi_offset 7, -4
 658 02fe 83B0     		sub	sp, sp, #12
 659              	.LCFI34:
 660              		.cfi_def_cfa_offset 16
 661 0300 00AF     		add	r7, sp, #0
 662              	.LCFI35:
 663              		.cfi_def_cfa_register 7
 664 0302 7860     		str	r0, [r7, #4]
 288:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     return ((uint32_t)(ADCx->GDR));
 665              		.loc 1 288 0
 666 0304 7B68     		ldr	r3, [r7, #4]
 667 0306 5B68     		ldr	r3, [r3, #4]
 289:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 668              		.loc 1 289 0
 669 0308 1846     		mov	r0, r3
 670 030a 07F10C07 		add	r7, r7, #12
 671 030e BD46     		mov	sp, r7
 672 0310 80BC     		pop	{r7}
 673 0312 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE66:
 677              		.align	2
 678              		.global	ADC_GlobalGetStatus
 679              		.thumb
 680              		.thumb_func
 682              	ADC_GlobalGetStatus:
 683              	.LFB67:
 290:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 291:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** /*********************************************************************//**
 292:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @brief        Get ADC Chanel status from AD global data register
 293:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    ADCx pointer to LPC_ADC_TypeDef, should be: LPC_ADC
 294:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @param[in]    StatusType
 295:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                       0:Burst status
 296:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** *                       1:Done  status
 297:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** * @return       SET / RESET
 298:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** **********************************************************************/
 299:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** FlagStatus  ADC_GlobalGetStatus(LPC_ADC_TypeDef *ADCx, uint32_t StatusType)
 300:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** {
 684              		.loc 1 300 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 16
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689 0314 80B4     		push	{r7}
 690              	.LCFI36:
 691              		.cfi_def_cfa_offset 4
 692              		.cfi_offset 7, -4
 693 0316 85B0     		sub	sp, sp, #20
 694              	.LCFI37:
 695              		.cfi_def_cfa_offset 24
 696 0318 00AF     		add	r7, sp, #0
 697              	.LCFI38:
 698              		.cfi_def_cfa_register 7
 699 031a 7860     		str	r0, [r7, #4]
 700 031c 3960     		str	r1, [r7, #0]
 301:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     uint32_t temp;
 302:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** 
 303:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     temp =  ADCx->GDR;
 701              		.loc 1 303 0
 702 031e 7B68     		ldr	r3, [r7, #4]
 703 0320 5B68     		ldr	r3, [r3, #4]
 704 0322 FB60     		str	r3, [r7, #12]
 304:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (StatusType){
 705              		.loc 1 304 0
 706 0324 3B68     		ldr	r3, [r7, #0]
 707 0326 002B     		cmp	r3, #0
 708 0328 04D0     		beq	.L31
 305:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         temp &= ADC_DR_DONE_FLAG;
 709              		.loc 1 305 0
 710 032a FB68     		ldr	r3, [r7, #12]
 711 032c 03F00043 		and	r3, r3, #-2147483648
 712 0330 FB60     		str	r3, [r7, #12]
 713 0332 03E0     		b	.L32
 714              	.L31:
 306:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }else{
 307:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         temp &= ADC_DR_OVERRUN_FLAG;
 715              		.loc 1 307 0
 716 0334 FB68     		ldr	r3, [r7, #12]
 717 0336 03F08043 		and	r3, r3, #1073741824
 718 033a FB60     		str	r3, [r7, #12]
 719              	.L32:
 308:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 309:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     if (temp){
 720              		.loc 1 309 0
 721 033c FB68     		ldr	r3, [r7, #12]
 722 033e 002B     		cmp	r3, #0
 723 0340 02D0     		beq	.L33
 310:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         return SET;
 724              		.loc 1 310 0
 725 0342 4FF00103 		mov	r3, #1
 726 0346 01E0     		b	.L34
 727              	.L33:
 311:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }else{
 312:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****         return RESET;
 728              		.loc 1 312 0
 729 0348 4FF00003 		mov	r3, #0
 730              	.L34:
 313:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c ****     }
 314:../src/lib/lpc177x_8x/Drivers/source/lpc177x_8x_adc.c **** }
 731              		.loc 1 314 0
 732 034c 1846     		mov	r0, r3
 733 034e 07F11407 		add	r7, r7, #20
 734 0352 BD46     		mov	sp, r7
 735 0354 80BC     		pop	{r7}
 736 0356 7047     		bx	lr
 737              		.cfi_endproc
 738              	.LFE67:
 740              	.Letext0:
 741              		.file 2 "g:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/ar
 742              		.file 3 "D:\\workspace_gnu\\RTT_Demo0\\src\\lib\\lpc177x_8x\\Drivers\\include/lpc_types.h"
 743              		.file 4 "D:\\workspace_gnu\\RTT_Demo0\\src\\lib\\lpc177x_8x\\Core\\Device\\NXP\\LPC177x_8x\\Includ
 744              		.file 5 "D:\\workspace_gnu\\RTT_Demo0\\src\\lib\\lpc177x_8x\\Drivers\\include/lpc177x_8x_adc.h"
 745              		.file 6 "D:\\workspace_gnu\\RTT_Demo0\\src\\lib\\lpc177x_8x\\Core\\CMSIS\\Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc177x_8x_adc.c
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:18     .text:00000000 $t
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:23     .text:00000000 ADC_Init
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:96     .text:00000070 ADC_DeInit
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:155    .text:000000bc ADC_GetData
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:194    .text:000000ec $d
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:198    .text:000000f0 $t
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:203    .text:000000f0 ADC_StartCmd
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:250    .text:00000124 ADC_BurstCmd
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:300    .text:00000158 ADC_PowerdownCmd
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:350    .text:0000018c ADC_EdgeStartConfig
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:400    .text:000001c0 ADC_IntConfig
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:459    .text:0000020c ADC_ChannelCmd
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:533    .text:00000274 ADC_ChannelGetData
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:580    .text:000002ac ADC_ChannelGetStatus
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:647    .text:000002fc ADC_GlobalGetData
C:\Users\YANGZH~1\AppData\Local\Temp\ccEa7Twk.s:682    .text:00000314 ADC_GlobalGetStatus
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.9fa2be94b3b27131c651c32db681ca6e
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.lpc_types.h.61.500abe635b953859f645467b1debaa34
                           .group:00000000 wm4.lpc177x_8x_libcfg_default.h.42.c21d4d8531a15b96cd9ccfa94b76f68e
                           .group:00000000 wm4.LPC177x_8x.h.34.ced9b468ef83bb68f280515946661353
                           .group:00000000 wm4.core_cm3.h.32.790cc16ac64d67f02f3790c90a28e38c
                           .group:00000000 wm4.core_cmInstr.h.25.dd98b40e8e0d1d9ee958eb9cce5e7898
                           .group:00000000 wm4.core_cm3.h.132.82da42f2eaa4f3e645984b3550bd4c22
                           .group:00000000 wm4.LPC177x_8x.h.1353.9b0a09b2831088a36b3e4060dcdc4532
                           .group:00000000 wm4.lpc177x_8x_adc.h.63.c903c818c236cfdff6e61ded0435e7f9
                           .group:00000000 wm4.system_LPC177x_8x.h.34.e57b19a2859ef593a5974e6904d3f0ac
                           .group:00000000 wm4.lpc177x_8x_clkpwr.h.61.8bfb9350f1be3b242e7e7c6f04f31221

UNDEFINED SYMBOLS
CLKPWR_ConfigPPWR
CLKPWR_GetCLK
